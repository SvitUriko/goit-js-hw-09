{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAe/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAASC,MAAMC,OAC3CC,EAAOL,OAAOH,EAAMI,OAAOC,SAASG,KAAKD,OACzCE,EAASN,OAAOH,EAAMI,OAAOC,SAASI,OAAOF,OAElCG,MAAMC,KAAK,CAAEC,OAAQH,IAE7BI,SAAQ,SAACC,EAAGC,GAtBvB,IAAuBC,EAAUV,EACzBW,GADeD,EAuBLD,EAAI,EAvBWT,EAuBRJ,EAAQa,EAAIP,EAtB7BS,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUV,UAEpBgB,EAAO,CAAEN,WAAUV,S,GAEpBA,E,KAeAkB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  const promises = Array.from({ length: amount });\n\n  promises.forEach((_, i) => {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n});\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","delay","value","step","amount","Array","from","length","forEach","_","i","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.243dbb64.js.map"}